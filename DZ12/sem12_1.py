# üìå –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å-—Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç–∞–µ—Ç —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ –ø—Ä–∏
# –≤—ã–∑–æ–≤–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
# üìå –≠–∫–∑–µ–º–ø–ª—è—Ä –¥–æ–ª–∂–µ–Ω –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ k –∑–Ω–∞—á–µ–Ω–∏–π.
# üìå –ü–∞—Ä–∞–º–µ—Ç—Ä k –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
# üìå –î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞–Ω–µ–µ –≤—ã–∑—ã–≤–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏
# –∏—Ö —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–æ–≤.

class Factorial:
    numbers = {}
    def __init__(self,num):
        self.storage = num
        
    def __str__(self):
        txt = '\n'.join((f'{k}: {v}' for k, v in self.numbers.items()))
        return f'–°–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª —Å –∏—Ö —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–æ–º:\n{txt}'

    def __call__(self, value):
        res = 1
        for i in range(2,value+1):
            res = res * i
        if len(self.numbers) == self.storage:
            dic = {}
            i=0
            for k, v in self.numbers.items():
                if i>0:
                    dic.setdefault(k,v)
                i+=1
            self.numbers=dic
        self.numbers.setdefault(value, res)
        return f'–§–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ {value} —Ä–∞–≤–µ–Ω {res}' 

    
f = Factorial(5)
print(f(5))
print(f(2))
print(f(3))
print(f(7))
print(f(4))
print(f(8))
print(f)