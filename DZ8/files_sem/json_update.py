# üìå –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ
# –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∏–º—è, –ª–∏—á–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏ —É—Ä–æ–≤–µ–Ω—å
# –¥–æ—Å—Ç—É–ø–∞ (–æ—Ç 1 –¥–æ 7).
# üìå –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–≤–æ–¥–∞ –¥–æ–±–∞–≤–ª—è–π—Ç–µ –Ω–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤
# JSON —Ñ–∞–π–ª.
# üìå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –ø–æ —É—Ä–æ–≤–Ω—é –¥–æ—Å—Ç—É–ø–∞.
# üìå –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã—Å—Ç—É–ø–∞–µ—Ç –∫–ª—é—á—ë–º –¥–ª—è –∏–º–µ–Ω–∏.
# üìå –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã —É–Ω–∏–∫–∞–ª—å–Ω—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ
# –æ—Ç —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞.
# üìå –ü—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–∂–µ –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã–µ
# –¥–æ–ª–∂–Ω—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è.
__all__ = ['json_update']

import os.path
import json

def json_update(name: str, persid: str, level: str):
    """–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö –≤ json —Ñ–∞–π–ª"""
    # dic = json_read('data.json')
    if len(dic) > 0:
        for key, value in dic.items():
            if key == level:
                value.setdefault(persid, name)
                break
        else:
            dic.setdefault(level,{persid: name})
    else:
        dic.setdefault(level,{persid: name})
    # print(dic)
    return dic


def json_read(fname = 'data.json'):
    """–§—É–Ω–∫—Ü–∏—è —á–∏—Ç–∞–µ—Ç –∏–∑ —Ñ–∞–π–ª–∞ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –µ—Å—Ç—å, –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å, –ª–∏–±–æ –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å"""
    if os.path.exists(fname) & len(fname) > 0:
        with open(fname,'r',encoding="UTF-8") as fjs:
            dic = json.load(fjs)
    else:
        dic = {}
    return dic
    

def write_json(dic, fname = 'data.json'):
    """–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –µ–≥–æ –≤ —Ñ–∞–π–ª"""
    with open(fname,'w',encoding="UTF-8") as fjs:
        json.dump(dic, fjs)
            
            
def check_dic(dic, persid):
    """"""
    if len(dic) > 0:
        for key, value in dic.items():
            for key1, value1 in value.items():
                if key1 == persid:
                    return False
        else: 
            return True
    else:
        return True


if __name__ == '__main__':
    dic = json_read('data.json')
    print(dic)
    cont = '0'
    while cont == '0':
        name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ")
        while True:
            persid = str(input("–í–≤–µ–¥–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: "))
            if check_dic(dic, persid):
                break 
        while True:
            level = int(input("–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ (1..7): "))
            if 0 < level < 8:
                break
        # print(name, persid, level)
        dic = json_update(name, persid, str(level))
        cont = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (–î–∞ - 0): ")
        # print(dic)
    write_json(dic)