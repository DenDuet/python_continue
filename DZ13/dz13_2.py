# üìå –†–µ—à–∏—Ç—å –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É—Å–ø–µ–ª–∏ —Ä–µ—à–∏—Ç—å –Ω–∞ —Å–µ–º–∏–Ω–∞—Ä–µ.
# üìå –í–æ–∑—å–º–∏—Ç–µ 1-3 –∑–∞–¥–∞—á–∏ –∏–∑ —Ç–µ—Ö, —á—Ç–æ –±—ã–ª–∏ –Ω–∞ –ø—Ä–æ—à–ª—ã—Ö
# —Å–µ–º–∏–Ω–∞—Ä–∞—Ö –∏–ª–∏ –≤ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏—è—Ö. –ù–∞–ø–∏—à–∏—Ç–µ –∫ –Ω–∏–º
# –∫–ª–∞—Å—Å—ã –∏—Å–∫–ª—é—á–µ–Ω–∏—è —Å –≤—ã–≤–æ–¥–æ–º –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
# –ü–æ–¥–Ω–∏–º–∞–π—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–¥–∞. –ù–∞–ø—Ä–∏–º–µ—Ä
# –Ω–µ–ª—å–∑—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏
# –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã.

# from Exceptions import LongError, WidthError, ConvertError
import os.path
import json

def json_update(name: str, persid: str, level: str):
    """–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö –≤ json —Ñ–∞–π–ª"""
    # dic = json_read('data.json')
    if len(dic) > 0:
        for key, value in dic.items():
            if key == level:
                value.setdefault(persid, name)
                break
        else:
            dic.setdefault(level,{persid: name})
    else:
        dic.setdefault(level,{persid: name})
    # print(dic)
    return dic


def json_read(fname = 'data1.json'):
    """–§—É–Ω–∫—Ü–∏—è —á–∏—Ç–∞–µ—Ç –∏–∑ —Ñ–∞–π–ª–∞ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –µ—Å—Ç—å, –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å, –ª–∏–±–æ –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å"""
    if os.path.exists(fname) & len(fname) > 0:
        with open(fname,'r',encoding="UTF-8") as fjs:
            dic = json.load(fjs)
    else:
        dic = {}
    return dic
    

def write_json(dic, fname = 'data1.json'):
    """–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –µ–≥–æ –≤ —Ñ–∞–π–ª"""
    with open(fname,'w',encoding="UTF-8") as fjs:
        json.dump(dic, fjs)
            
            
def check_dic(dic, persid):
    """"""
    if len(dic) > 0:
        for key, value in dic.items():
            for key1, value1 in value.items():
                if key1 == persid:
                    return False
        else: 
            return True
    else:
        return True


if __name__ == '__main__':
    dic = json_read('data1.json')
    print(dic)
    cont = '0'
    while cont == '0':
        name = input("–í–≤–µ–¥–∏—Ç–µ –∏–º—è: ")
        while True:
            persid = str(input("–í–≤–µ–¥–∏—Ç–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä: "))
            if check_dic(dic, persid):
                break 
        while True:
            try:
                level = int(input("–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ (1..7): "))
                if 0 < level < 8:
                    break
            except ValueError as e:
                print("–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ü–∏—Ñ—Ä–∞–º–∏ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ (1..7): ")
            
        # print(name, persid, level)
        dic = json_update(name, persid, str(level))
        cont = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (–î–∞ - 0): ")
        # print(dic)
    write_json(dic)
 
