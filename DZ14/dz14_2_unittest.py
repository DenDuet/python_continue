# üìå –í–æ–∑—å–º–∏—Ç–µ 1-3 –∑–∞–¥–∞—á–∏ –∏–∑ —Ç–µ—Ö, —á—Ç–æ –±—ã–ª–∏ –Ω–∞ –ø—Ä–æ—à–ª—ã—Ö
# —Å–µ–º–∏–Ω–∞—Ä–∞—Ö –∏–ª–∏ –≤ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏—è—Ö.
# üìå –ù–∞–ø–∏—à–∏—Ç–µ –∫ –Ω–∏–º —Ç–µ—Å—Ç—ã.
# üìå 2-5 —Ç–µ—Å—Ç–æ–≤ –Ω–∞ –∑–∞–¥–∞—á—É –≤ —Ç—Ä—ë—Ö –≤–∞—Ä–∏–∞–Ω—Ç–∞—Ö:
# ‚óã doctest,
# ‚óã unittest,
# ‚óã pytest.

import unittest

class TestCaseName(unittest.TestCase):
    def test_method_int(self):
        self.assertEqual(inp_num(7), 7)
        
    def test_method_float(self):
        self.assertEqual(inp_num(5.15), 5.15)        
    
    def test_method_skip(self):
        self.assertEqual(inp_num("Text"), False)

def inp_num(inp):
    """
    –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ inp –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –µ–≥–æ –≤ int –∏–ª–∏ float
    >>> inp_num(5)
    –í—ã –≤–≤–µ–ª–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ: 5
    5
    >>> inp_num(5.15)
    –í–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: 5.15 - —ç—Ç–æ –Ω–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
    –í—ã –≤–≤–µ–ª–∏ –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ: 5.15
    5.15
    >>> inp_num("text")
    –í–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: text - —ç—Ç–æ –Ω–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ
    –í–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: text - —ç—Ç–æ –Ω–µ —á–∏—Å–ª–æ
    """
    try:
        num = float(inp)
        return num
    except ValueError as e:
            try:
                num = int(inp)
                return num
            except ValueError as e:
                return False
                

if __name__ == '__main__':
    unittest.main(verbosity=2)

    # import doctest
    # doctest.testmod(verbose=True)

#     num = inp_num(input("–í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ –∏–ª–∏ –≤–µ—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —á–∏—Å–ª–æ: "))
        