# Добавьте в пакет, созданный на семинаре шахматный модуль. 
# Внутри него напишите код, решающий задачу о 8 ферзях. 
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били друг друга. 
# Вам дана расстановка 8 ферзей на доске, определите, есть ли среди них пара бьющих друг друга. 
# Программа получает на вход восемь пар чисел, каждое число от 1 до 8 - координаты 8 ферзей. 
# Если ферзи не бьют друг друга верните истину, а если бьют - ложь.
__all__ = ['chess', 'rand_queen']

from random import randint


def chess(queen :list) -> bool:
    """Функция проверяет список с координатами ферзей (queen) на пересечение, если оно есть, 
    то возвращается False иначе True"""
    for i in range(0,8):
        for j in range(i+1,8):
            if queen[i][0] == queen[j][0]:
                return False
            elif queen[i][1] == queen[j][1]:
                return False
            elif abs(queen[i][0] - queen[j][0]) == abs(queen[i][1] - queen[j][1]):
                return False
    else:
        return True
            
            
# Напишите функцию в шахматный модуль. 
# Используйте генератор случайных чисел для случайной расстановки ферзей в задаче выше. 
# Проверяйте различный случайные  варианты и выведите 4 успешных расстановки.

def rand_queen():
    """Функция генерирует список с координатами расстановки ферзей, отправляет в функцию
    chess на проверку, правильные комбинации распечатывает."""
    _COUNT = 4
    count = _COUNT
    while count > 0:
        queen = []
        for i in range(1,9):
            queen.append([i,randint(1,8)])
        res = chess(queen)
        if res:
            print(f"{_COUNT-count+1}. Положение ферзей с такими координатами: \n{queen} \nбезопасно для них.\n")
            count-=1
