# üìå –†–µ—à–∏—Ç—å –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É—Å–ø–µ–ª–∏ —Ä–µ—à–∏—Ç—å –Ω–∞ —Å–µ–º–∏–Ω–∞—Ä–µ.
# üìå –î–æ–±–∞–≤—å—Ç–µ –∫–æ –≤—Å–µ–º –∑–∞–¥–∞—á–∞–º —Å —Å–µ–º–∏–Ω–∞—Ä–∞ —Å—Ç—Ä–æ–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∏ –º–µ—Ç–æ–¥—ã –≤—ã–≤–æ–¥–∞
# –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞ –ø–µ—á–∞—Ç—å.
# üìå –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å –ú–∞—Ç—Ä–∏—Ü–∞. –î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥—ã –¥–ª—è:
# ‚óã –≤—ã–≤–æ–¥–∞ –Ω–∞ –ø–µ—á–∞—Ç—å,
# ‚óã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è,
# ‚óã —Å–ª–æ–∂–µ–Ω–∏—è,
# ‚óã *—É–º–Ω–æ–∂–µ–Ω–∏—è –º–∞—Ç—Ä–∏—Ü

class Matrix:
    """–ö–ª–∞—Å—Å –≤—ã–≤–æ–¥–∏—Ç –º–∞—Ç—Ä–∏—Ü—É –Ω–∞ –ø–µ—á–∞—Ç—å, —Ç–∞–∫–∂–µ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç 2 –º–∞—Ç—Ä–∏—Ü—ã, —Å–∫–ª–∞–¥—ã–≤–∞–µ—Ç –∏ —É–º–Ω–æ–∂–∞–µ—Ç –∏—Ö."""
    matr = [[],]
    def __init__(self,matr: list):
        """–§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é –º–∞—Ç—Ä–∏—Ü—É."""
        self.matr = matr
        
    def __eq__(self, other):
        """–§—É–Ω–∫—Ü–∏—è —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –º–∞—Ç—Ä–∏—Ü—ã –∏ –≤—ã–≤–æ–¥–∏—Ç –∑–∞–∫–ª—é—á–µ–Ω–∏–µ –æ–± –∏—Ö —Ä–∞–≤–µ–Ω—Å—Ç–≤–µ."""
        if len(self.matr) == len(other.matr):
            if len(self.matr[0]) == len(other.matr[0]):
                for i in range(len(self.matr)):
                    for j in range(len(self.matr[0])):
                        if self.matr[i][j]!=other.matr[i][j]:
                            return "–ú–∞—Ç—Ä–∏—Ü—ã –Ω–µ —Ä–∞–≤–Ω—ã."
        return "–ú–∞—Ç—Ä–∏—Ü—ã —Ä–∞–≤–Ω—ã."
    
    def __mul__(self, other):
        l1 = l2 = 0
        if (len(self.matr) == len(other.matr[0])):
            l1 = len(self.matr)
            l2 = len(other.matr[0])
        if (len(self.matr[0]) == len(other.matr)):
            l1 = len(self.matr[0])
            l2 = len(other.matr)
        if l1!=0 and l2!=0:
            new_matr = []
            new_matr_str = 0
            for i in range(l1):
                for j in range(l2):
                    new_matr_str = new_matr_str + (self.matr[i][j] * other.matr[j][i])
                new_matr.append(new_matr_str)
                new_matr_str = 0
        return Matrix(new_matr)  
        
        
    def __add__(self, other):
        """–§—É–Ω–∫—Ü–∏—è —Å—É–º–º–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü."""
        new_matr = []
        new_matr_str = []
        for i in range(len(self.matr)):
            for j in range(len(self.matr[i])):
                new_matr_str.append(self.matr[i][j] + other.matr[i][j])
            new_matr.append(new_matr_str)
            new_matr_str = []
        return Matrix(new_matr)  

    def __str__(self):
        print("\n–ú–∞—Ç—Ä–∏—Ü–∞:")
        for i in range(len(self.matr)):
            print(self.matr[i])
        return f"–ú–∞—Ç—Ä–∏—Ü–∞: {self.matr}"
    
if __name__ == "__main__":
    matr = [[1,2,3],[4,5,6],[7,8,9]]
    matrix = Matrix(matr)
    print(matrix)  
    matr1 = [[2,2,2],[3,3,3],[4,5,6]]
    matrix1 = Matrix(matr1)
    print(matrix1)   
    matri = matrix + matrix1
    print("–ú–∞—Ç—Ä–∏—Ü–∞ —Å—É–º–º—ã: ", matri)

    matri = matrix * matrix1
    print("–ú–∞—Ç—Ä–∏—Ü–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: ", matri)
    
    print(f'–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü: {matrix == matrix = }')
    print(f'–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–∞—Ç—Ä–∏—Ü: {matrix == matrix1 = }')
    help(Matrix)