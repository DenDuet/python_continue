# üìå –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–ª–∞—Å—Å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏–∑ –ø—Ä–æ—à–ª–æ–≥–æ —Å–µ–º–∏–Ω–∞—Ä–∞.
# üìå –î–æ–±–∞–≤—å—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–ª–æ–∂–µ–Ω–∏—è –∏ –≤—ã—á–∏—Ç–∞–Ω–∏—è.
# üìå –ü—Ä–∏ —ç—Ç–æ–º –¥–æ–ª–∂–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
# –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞.
# üìå –°–∫–ª–∞–¥—ã–≤–∞–µ–º –∏ –≤—ã—á–∏—Ç–∞–µ–º –ø–µ—Ä–∏–º–µ—Ç—Ä—ã, –∞ –Ω–µ –¥–ª–∏–Ω–Ω—É –∏ —à–∏—Ä–∏–Ω—É.
# üìå –ü—Ä–∏ –≤—ã—á–∏—Ç–∞–Ω–∏–∏ –Ω–µ –¥–æ–ø—É—Å–∫–∞–π—Ç–µ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π.


class Square:
    """–í –∫–ª–∞—Å—Å–µ —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–µ—Ä–∏–º–µ—Ç—Ä –∏ –ø–ª–æ—â–∞–¥—å –ø–æ –ø—Ä–∏–Ω—è—Ç—ã–º –∑–Ω–∞—á–µ–Ω–∏—è–º —Å—Ç–æ—Ä–æ–Ω."""
    def __init__(self,long,width=0):
        """–í —Ñ—É–Ω–∫—Ü–∏–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç."""
        self.long = long
        if width == 0:
            self.width = long
        else:
            self.width = width
    
        
    def sqr(self):
        """–§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞."""
        return self.long * self.width
    
    def perim(self):
        """–§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø–µ—Ä–∏–º–µ—Ç—Ä –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞."""
        return 2 * (self.long + self.width)
    
    def __add__(self, other):
        """–§—É–Ω–∫—Ü–∏—è —Å—É–º–º–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –∫–ª–∞—Å—Å–∞."""
        new_perim = self.perim() + other.perim()
        new_long = self.long
        new_width = new_perim / 2 - new_long
        return Square(new_long, new_width)
    
    def __sub__(self, other):
        """–§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Ç–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –∫–ª–∞—Å—Å–∞."""
        new_perim = abs(self.perim() - other.perim())
        new_long = min([self.long,self.width,other.long,other.width])
        new_width = new_perim / 2 - new_long
        return Square(new_long, new_width)
        
    
if __name__ == '__main__':
    
    p = Square(2,5)
    p1 = Square(5,10)
    print(f"{p.sqr()=}, {p.perim()=}")
    print(f"{p1.sqr()=}, {p1.perim()=}")
    res_sum = p + p1
    print(f"{res_sum.long= }, {res_sum.width= }")
    res_sub = p - p1
    print(f"{res_sub.long= }, {res_sub.width= }")
    help(Square) 